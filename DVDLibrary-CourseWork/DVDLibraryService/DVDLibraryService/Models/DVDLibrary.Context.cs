//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DVDLibraryService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DVDLibraryEntities : DbContext
    {
        public DVDLibraryEntities()
            : base("name=DVDLibraryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DVD> DVDs { get; set; }
        public virtual DbSet<Note> Notes { get; set; }
        public virtual DbSet<Rating> Ratings { get; set; }
    
        public virtual ObjectResult<GetDVDsbyDirector_Result> GetDVDsbyDirector(string director)
        {
            var directorParameter = director != null ?
                new ObjectParameter("Director", director) :
                new ObjectParameter("Director", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDVDsbyDirector_Result>("GetDVDsbyDirector", directorParameter);
        }
    
        public virtual ObjectResult<GetDVDsByTitle_Result> GetDVDsByTitle(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDVDsByTitle_Result>("GetDVDsByTitle", titleParameter);
        }
    
        public virtual ObjectResult<GetDVDsByYear_Result> GetDVDsByYear(Nullable<int> realeaseyear)
        {
            var realeaseyearParameter = realeaseyear.HasValue ?
                new ObjectParameter("realeaseyear", realeaseyear) :
                new ObjectParameter("realeaseyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDVDsByYear_Result>("GetDVDsByYear", realeaseyearParameter);
        }
    
        public virtual ObjectResult<DVD> GetDVDsbyDirector1(string director)
        {
            var directorParameter = director != null ?
                new ObjectParameter("Director", director) :
                new ObjectParameter("Director", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DVD>("GetDVDsbyDirector1", directorParameter);
        }
    
        public virtual ObjectResult<DVD> GetDVDsbyDirector1(string director, MergeOption mergeOption)
        {
            var directorParameter = director != null ?
                new ObjectParameter("Director", director) :
                new ObjectParameter("Director", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DVD>("GetDVDsbyDirector1", mergeOption, directorParameter);
        }
    }
}
