@model Exercises.Models.ViewModels.StudentVM

@{
    ViewBag.Title = "EditStudent";
}

<div class="row">
    <div class="col-xs-12">
        <h3>Edit Student Information</h3>
        @Html.ActionLink("Return to List", "List", "Student")
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        @using (Html.BeginForm("EditStudentInfo", "Student", FormMethod.Post))
        {
            
            @Html.HiddenFor(m => m.Student.StudentId)
            <div class="form-group">
                <label>First Name</label>
                @Html.TextBoxFor(m => m.Student.FirstName, new { @class = "form-control", placeholder =Model.Student.FirstName})
                <span class="text-danger">@Html.ValidationMessageFor(m => m.Student.FirstName)</span>
                
            </div>
            <div class="form-group">
                <label>Last Name</label>
                @Html.TextBoxFor(m => m.Student.LastName, new { @class = "form-control", placeholder = Model.Student.LastName })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.Student.LastName)</span>
            </div>
            <div class="form-group">
                <label>Major</label>
                @Html.DropDownListFor(m => m.Student.Major.MajorId, Model.MajorItems, "-Choose One-", new { @class = "form-control"})
                <span class="text-danger">@Html.ValidationMessageFor(m => m.Student.Major.MajorId)</span>
                <br/>
            </div>
            <div class="form-group">
                <label>GPA:</label>
                @Html.TextBoxFor(m => m.Student.GPA, new { @class = "form-control",type="number" , step=".01", placeholder=Model.Student.GPA })
                <span class="text-danger">@Html.ValidationMessageFor(m => m.Student.GPA)</span>
            </div>
            <h4>Courses</h4>
            <div class="form-group">
                @Html.ListBoxFor(m => m.SelectedCourseIds, Model.CourseItems, new { @class = "form-control", placeholder=Model.Student.Courses})
            </div>
            <button type="submit" class="btn btn-sm btn-primary">Save</button>
        }
    </div>
    
    <div class="=col-xs-12">
        @if (Model.Student.Address != null)
        {
        using (Html.BeginForm("EditStudentAddress", "Student", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.Student.StudentId)
            @Html.HiddenFor(m => m.Student.FirstName)
            @Html.HiddenFor(m => m.Student.LastName)
            @Html.HiddenFor(m=>m.Student.Major.MajorName)
            @Html.HiddenFor(m=>m.Student.GPA)
            @Html.HiddenFor(m=>m.Student.Courses)
            <div class=" form-group">
                <label>Street address</label>
                @Html.TextBoxFor(m=>m.Student.Address.Street1, new { @class = "form-control", placeholder = Model.Student.Address.Street1})
            </div>
            <div class=" form-group">
                <label>Street address (cont.)</label>
                @Html.TextBoxFor(m => m.Student.Address.Street2, new { @class = "form-control", placeholder = Model.Student.Address.Street2 })
            </div>
            <div class=" form-group">
                <label>City</label>
                @Html.TextBoxFor(m => m.Student.Address.City, new { @class = "form-control", placeholder = Model.Student.Address.City })
            </div>
            <div class=" form-group">
                <label>State</label>
                @Html.TextBoxFor(m => m.Student.Address.State.StateAbbreviation, new { @class = "form-control", placeholder = Model.Student.Address.State.StateAbbreviation})
            </div>
            <div class=" form-group">
                <label>Postal code</label>
                @Html.TextBoxFor(m => m.Student.Address.PostalCode, new { @class = "form-control", type = "number", placeholder = Model.Student.Address.PostalCode })
            </div>
            <button type="submit" class="btn btn-sm btn-primary">Save</button>
        }}
        @if(Model.Student.Address==null){ 
        using (Html.BeginForm("EditStudentAdress", "Student", FormMethod.Post))
        {
        @Html.HiddenFor(m => m.Student.StudentId)
        @Html.HiddenFor(m => m.Student.FirstName)
        @Html.HiddenFor(m => m.Student.LastName)
        @Html.HiddenFor(m => m.Student.Major.MajorName)
        @Html.HiddenFor(m => m.Student.GPA)
        @Html.HiddenFor(m => m.Student.Courses)
        <div class=" form-group">
            <label>Street address</label>
            @Html.TextBoxFor(m => m.Student.Address.Street1, new { @class = "form-control"})
        </div>
        <div class=" form-group">
            <label>Street address (cont.)</label>
            @Html.TextBoxFor(m => m.Student.Address.Street2, new { @class = "form-control"})
        </div>
        <div class=" form-group">
            <label>City</label>
            @Html.TextBoxFor(m => m.Student.Address.City, new { @class = "form-control"})
        </div>
        <div class=" form-group">
            <label>State</label>
            @Html.TextBoxFor(m => m.Student.Address.State.StateAbbreviation, new { @class = "form-control"})
        </div>
        <div class=" form-group">
            <label>Postal code</label>
            @Html.TextBoxFor(m => m.Student.Address.PostalCode, new { @class = "form-control", type = "number"})
        </div>
        <button type="submit" class="btn btn-sm btn-primary">Save</button>
        }
              }
    </div>
</div>